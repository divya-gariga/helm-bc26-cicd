name: bootcamp deployment
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: clone repo
        uses: actions/checkout@v2
      - name: docker login to github container registry
        uses: docker/login-action/@v2
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: cd
        run: cd bootcamp-26/

      - name: maven install
        working-directory: ./backend
        run: mvn clean install -DskipTests

      - name: build mysql
        working-directory: ./database
        run: docker build . -t ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/bootcamp-26-db:latest

      - name: build backend
        working-directory: ./backend
        run: docker build . -t ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/bootcamp-26-backend:latest

      - name: build frontend
        working-directory: ./frontend
        run: docker build . -t ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/bootcamp-26-frontend:latest

      - name: docker push mysql
        run: docker push ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/bootcamp-26-db:latest
      - name: docker push backend
        run: docker push ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/bootcamp-26-backend:latest
      - name: docker push frontend
        run: docker push ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/bootcamp-26-frontend:latest
      - name: clone repo
        uses: actions/checkout@v2
  deploy:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bootcamp-26
    steps:
      - name: cd
        run: cd bootdiscovery-helm/
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: connect to eks cluster
        run: aws eks --region ${{ secrets.AWS_DEFAULT_REGION }} update-kubeconfig --name ${{ secrets.CLUSTER_NAME }}
      - name: create release or upgrade
        run: kubectl config set-context --current --namespace=bc26-app && helm upgrade --install app .
      - name: verify installation
        run: helm list && kubectl get all && kubectl get ingress
